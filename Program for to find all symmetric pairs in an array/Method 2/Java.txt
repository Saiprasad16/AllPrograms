// Java program to find all symmetric pairs in a given array
import java.util.HashMap;

class Main
{

    // Print all pairs that have a symmetric counterpart
    static void find_symmetric_pairs(int arr[][])
    {
        // Create an empty hashMap
        HashMap<Integer, Integer> hashMap = new HashMap<Integer, Integer>();

        // Traverse through the array
        for (int i = 0; i < arr.length; i++)
        {
            // First element as key and second element as value for each pair
            int first = arr[i][0];
            int second = arr[i][1];

            // Look for second element of this pair in hashtable
            Integer val = hashMap.get(second);

            // If found and value in hash matches with first element of this pair, we found symmetry
            if (val != null && val == first)
                System.out.print(“(” + second + “, ” + first + “)” + ” “);

            else // Else put second element of this pair in hash table
                hashMap.put(first, second);
        }
    }

    public static void main(String arg[])
    {
        int arr[][] = new int[5][2];
        arr[0][0] = 1; arr[0][1] = 2;
        arr[1][0] = 3; arr[1][1] = 4;
        arr[2][0] = 5; arr[2][1] = 6;
        arr[3][0] = 2; arr[3][1] = 1;
        arr[4][0] = 4; arr[4][1] = 3;
        System.out.print(“Symmetric pairs : “);
        find_symmetric_pairs(arr);
    }
}