/* C++ program to return nth node from the end in a linked list */
#include <iostream>
#include <stdlib.h>
using namespace std;

/* Structure of node */
struct Node
{
    int data;
    struct Node *next;
} *head;

void initialize()
{
    head = NULL;
}

/* Function to insert a node in linke dlist */
void insert(int num)
{
    struct Node* newNode = (struct Node*) malloc(sizeof(struct Node));
    newNode->data = num;
    newNode->next = head;
    head = newNode;
}

void printNthFromLast(struct Node *head, int n)
{
    struct Node *main_ptr = head;
    struct Node *ref_ptr = head;

    int count = 0;
    if(head != NULL)
    {
        while( count < n )
        {
            if(ref_ptr == NULL)
            {
                cout << n << ” is greater than the no. of nodes in list”;
                return;
            }
            ref_ptr = ref_ptr->next;
            count++;
        }

        while(ref_ptr != NULL)
        {
            main_ptr = main_ptr->next;
            ref_ptr = ref_ptr->next;
        }
        cout << “\nNth node from the end : ” << main_ptr->data << endl;
    }
}

/* Prints a linked list from head node till tail node */
void printLinkedList(struct Node *nodePtr)
{
    while (nodePtr != NULL)
    {
        cout << nodePtr->data;
        nodePtr = nodePtr->next;
        if(nodePtr != NULL)
            cout << “–>”;
    }
}

int main()
{
    int N, k;
    struct node *NthNode;
    initialize();
    /* Creating a linked List*/
    int new_node;
    int i;
    cout << “\nEnter the total number of nodes : “; /* Number of nodes */
    cin >> k;
    cout << “\nEnter the data for the nodes : “;
    for(i = 0; i < k; i++)
    {
        cin >> new_node;
        insert(new_node); /* Inserting the nodes */
    }

    cout << “\nLinked List : “;
    printLinkedList(head);
    cout << “\n\nEnter value of N : “;
    cin >> N;
    printNthFromLast(head, N);
    return 0;
}