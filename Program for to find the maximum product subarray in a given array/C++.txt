// C++ program to find the maximum product subarray in the given array

#include 

using namespace std;

int min (int x, int y) {return x < y? x : y; } // find the minimum element

int max (int x, int y) {return x > y? x : y; } // find the maximum element

// Function to find the maximum product subarray

int maxSubarrayProduct(int arr[], int n)

{

    int max_ending_here = 1; // Initialize values

    int min_ending_here = 1;

    int max_so_far = 1;

    for (int i = 0; i < n; i++)

    {

        if (arr[i] > 0)

        {

            max_ending_here = max_ending_here*arr[i]; // update max value

            min_ending_here = min (min_ending_here * arr[i], 1);

        }

        else if (arr[i] == 0)

        {

            max_ending_here = 1;

            min_ending_here = 1;

        }

        else

        {

            int temp = max_ending_here; // temp variable to store max value

            max_ending_here = max (min_ending_here * arr[i], 1);

            min_ending_here = temp * arr[i];

        }

        if (max_so_far < max_ending_here)

            max_so_far = max_ending_here; // update max value

    }

    return max_so_far; // return maximum product

}


int main()

{

    int siz;

    cout << “nEnter the size of the array : “;

    cin>>siz;

    int arr[10];

    cout << “nInput the array elements : “;

    for(int i=0;i<siz;i++)

        cin>>arr[i];

    cout << “nMaximum product : “;

    cout<<maxSubarrayProduct(arr, siz) << endl;

    return 0;

}