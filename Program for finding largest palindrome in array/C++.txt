// c++  program to find Largest palindrome in an array

#include <bits/stdc++.h>
using namespace std;
bool check_palindrome(int n)
{
    int div = 1;
    while (n / div >= 10)
        div *= 10;

    while (n != 0)
    {
        int first = n / div;
        int last = n % 10;

        // If first and last digits are not same then return false
        if (first != last)
            return false;

        // Removing the leading and trailing digits from the number
        n = (n % div) / 10;

        // Reducing divisor by a factor of 2 as 2 digits are dropped
        div = div / 100;
    }
    return true;
}
int large_palindrome(int A[], int n)
{

    // Sort the array
    sort(A, A + n);

    for (int i = n – 1; i >= 0; –i)
    {
        if (check_palindrome(A[i]))
            return A[i];
    }
    return -1;
}
int main()
{
    int a[15], n, i;
    cout<<“Enter the number of entries:”;
    cin>>n;
    cout<<“Enter the elements:”<<endl;
    for(i=0; i<n; i++)
        cin>>a[i];
    cout <<“Largest Palindrome: “<< large_palindrome(a, n);
    return 0;
}

